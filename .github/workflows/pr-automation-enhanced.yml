name: Enhanced PR Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
      - 'feature/**'
  push:
    branches:
      - main
      - develop

jobs:
  # Job 1: Code Quality & Linting
  lint-and-format:
    name: Lint & Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint || true
        continue-on-error: true

      - name: Run Prettier Check
        run: npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}" || true
        continue-on-error: true

      - name: Type Check (TypeScript)
        run: npm run type-check || true
        continue-on-error: true
        
      - name: Generate Lint Report
        if: always()
        run: |
          echo "# Lint Report" > lint-report.md
          echo "Generated at: $(date)" >> lint-report.md
          echo "Branch: ${{ github.ref_name }}" >> lint-report.md

      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint-report.md

  # Job 2: Automated Testing
  test-suite:
    name: Run Test Suite
    runs-on: ubuntu-latest
    needs: lint-and-format
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test:unit || true
        continue-on-error: true

      - name: Run Integration Tests
        run: npm run test:integration || true
        continue-on-error: true

      - name: Generate Test Coverage Report
        if: always()
        run: |
          npm run test:coverage || true
          echo "# Test Coverage Report" > test-report.md
          echo "Node Version: ${{ matrix.node-version }}" >> test-report.md
          echo "Generated at: $(date)" >> test-report.md

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-node-${{ matrix.node-version }}
          path: |
            test-report.md
            coverage/

  # Job 3: Security Audit
  security-audit:
    name: Security & Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate || true
        continue-on-error: true

      - name: Check for outdated dependencies
        run: npm outdated || true
        continue-on-error: true

      - name: Generate Security Report
        if: always()
        run: |
          echo "# Security Audit Report" > security-report.md
          echo "Generated at: $(date)" >> security-report.md
          npm audit --json > security-audit.json || true

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            security-report.md
            security-audit.json

  # Job 4: Build Verification
  build-verification:
    name: Build & Compile Check
    runs-on: ubuntu-latest
    needs: [lint-and-format, test-suite]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Frontend
        run: npm run build:frontend || true
        continue-on-error: true

      - name: Build Backend
        run: npm run build:backend || true
        continue-on-error: true

      - name: Generate Build Report
        if: always()
        run: |
          echo "# Build Report" > build-report.md
          echo "Generated at: $(date)" >> build-report.md
          echo "Build Status: Check artifacts for details" >> build-report.md

      - name: Upload Build Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-report
          path: build-report.md

  # Job 5: Composite Review & Results
  composite-review:
    name: Composite Review & Notification
    runs-on: ubuntu-latest
    needs: [lint-and-format, test-suite, security-audit, build-verification]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./reports

      - name: Generate Composite Report
        run: |
          echo "# 🎯 Composite CI/CD Report" > composite-report.md
          echo "" >> composite-report.md
          echo "**Repository:** ${{ github.repository }}" >> composite-report.md
          echo "**Branch:** ${{ github.ref_name }}" >> composite-report.md
          echo "**Commit:** ${{ github.sha }}" >> composite-report.md
          echo "**Author:** ${{ github.actor }}" >> composite-report.md
          echo "**Timestamp:** $(date)" >> composite-report.md
          echo "" >> composite-report.md
          echo "## 📊 Job Results" >> composite-report.md
          echo "" >> composite-report.md
          echo "- ✅ Lint & Format: ${{ needs.lint-and-format.result }}" >> composite-report.md
          echo "- ✅ Test Suite: ${{ needs.test-suite.result }}" >> composite-report.md
          echo "- ✅ Security Audit: ${{ needs.security-audit.result }}" >> composite-report.md
          echo "- ✅ Build Verification: ${{ needs.build-verification.result }}" >> composite-report.md
          echo "" >> composite-report.md
          echo "## 📁 Detailed Reports" >> composite-report.md
          echo "Check the artifacts for detailed reports from each job." >> composite-report.md
          cat composite-report.md

      - name: Upload Composite Report
        uses: actions/upload-artifact@v4
        with:
          name: composite-report
          path: composite-report.md

      - name: Comment PR with Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('composite-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

      - name: Send Notification Summary
        if: always()
        run: |
          echo "✅ CI/CD Pipeline completed"
          echo "View detailed reports in the Actions artifacts"
          echo "Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
