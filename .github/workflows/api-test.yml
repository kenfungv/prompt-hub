name: API Testing

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  api-test:
    name: Run API Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install backend dependencies
        run: |
          cd backend
          npm install
      
      - name: Start backend server
        run: |
          cd backend
          npm start &
          echo $! > server.pid
        env:
          NODE_ENV: test
          PORT: 3000
          MONGODB_URI: mongodb://localhost:27017/prompt-hub-test
      
      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend server to start..."
          for i in {1..30}; do
            if curl -s http://localhost:3000/api/health > /dev/null 2>&1; then
              echo "Backend server is ready!"
              exit 0
            fi
            echo "Attempt $i: Server not ready yet, waiting..."
            sleep 2
          done
          echo "Backend server failed to start in time"
          exit 1
      
      - name: Install Newman (Postman CLI)
        run: npm install -g newman newman-reporter-htmlextra
      
      - name: Create reports directory
        run: mkdir -p reports
      
      - name: Run Postman Collection
        run: |
          newman run backend/postman/collection.json \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export reports/api-test-report.html \
            --bail \
            --color on
        continue-on-error: false
      
      - name: Stop backend server
        if: always()
        run: |
          if [ -f backend/server.pid ]; then
            kill $(cat backend/server.pid) || true
          fi
      
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-report
          path: reports/api-test-report.html
          retention-days: 30
      
      - name: Check test results
        if: failure()
        run: |
          echo "❌ API tests failed. Please check the test report for details."
          exit 1
      
      - name: Success notification
        if: success()
        run: echo "✅ All API tests passed successfully!"
