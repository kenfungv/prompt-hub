name: API Testing

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  api-test:
    name: Run API Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"  
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install backend dependencies
        run: |
          cd backend
          npm install
      
      - name: Create backend .env file
        run: |
          cd backend
          echo "NODE_ENV=test" > .env
          echo "MONGODB_URI=mongodb://localhost:27017/test_db" >> .env
          echo "JWT_SECRET=test-secret-key-for-ci" >> .env
          echo "PORT=3000" >> .env
      
      - name: Start backend server
        run: |
          cd backend
          npm start &
          echo $! > server.pid
      
      - name: Wait for backend to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000/health; do sleep 2; done'
      
      - name: Install API test dependencies
        run: |
          cd api-tests
          npm install
      
      - name: Run API tests
        run: |
          cd api-tests
          npm test
      
      - name: Stop backend server
        if: always()
        run: |
          if [ -f backend/server.pid ]; then
            kill $(cat backend/server.pid) || true
          fi
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          path: api-tests/test-results
          retention-days: 7
